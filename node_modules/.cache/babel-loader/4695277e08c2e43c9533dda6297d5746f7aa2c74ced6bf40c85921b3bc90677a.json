{"ast":null,"code":"var _jsxFileName = \"/Users/jellyfish/Desktop/job_assignments/tekkare_assignment/tekkare_assignment/src/components/MedicineChart.tsx\",\n  _s = $RefreshSig$();\n// src/components/MedicineChart.tsx\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport KPIChart from './KPIChart';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MedicineChart = () => {\n  _s();\n  const [medicines, setMedicines] = useState([]);\n  const [selectedMedication, setSelectedMedication] = useState(null);\n  useEffect(() => {\n    axios.get('/path/to/data_exemple2.JSON').then(response => setMedicines(response.data.molecules)).catch(error => console.error('Error fetching the medicine data:', error));\n  }, []);\n  const handleSelectMedication = medication => {\n    setSelectedMedication(medication);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    title: \"Medication Price History\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"medication-select\",\n        className: \"block mb-2\",\n        children: \"Select a medication:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"medication-select\",\n        className: \"block w-full p-2 border rounded\",\n        onChange: e => {\n          const [moleculeName, medicationName] = e.target.value.split('|');\n          const selectedMolecule = medicines.find(molecule => molecule.name === moleculeName);\n          const selectedMedication = selectedMolecule === null || selectedMolecule === void 0 ? void 0 : selectedMolecule.medications.find(med => med.name === medicationName);\n          if (selectedMedication) handleSelectMedication(selectedMedication);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Select a medication --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), medicines.map(molecule => molecule.medications.map(medication => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: `${molecule.name}|${medication.name}`,\n          children: [molecule.name, \" - \", medication.name, \" (\", medication.dosage, \")\"]\n        }, medication.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this)))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), selectedMedication && /*#__PURE__*/_jsxDEV(KPIChart, {\n      title: `${selectedMedication.name} Price History`,\n      data: selectedMedication.priceHistory.map(history => history.priceEUR),\n      labels: selectedMedication.priceHistory.map(history => history.date)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(MedicineChart, \"El/b8uaroBPcHQGJhvfboeXGrT4=\");\n_c = MedicineChart;\nexport default MedicineChart;\nvar _c;\n$RefreshReg$(_c, \"MedicineChart\");","map":{"version":3,"names":["React","useEffect","useState","axios","KPIChart","Card","jsxDEV","_jsxDEV","MedicineChart","_s","medicines","setMedicines","selectedMedication","setSelectedMedication","get","then","response","data","molecules","catch","error","console","handleSelectMedication","medication","title","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","e","moleculeName","medicationName","target","value","split","selectedMolecule","find","molecule","name","medications","med","map","dosage","priceHistory","history","priceEUR","labels","date","_c","$RefreshReg$"],"sources":["/Users/jellyfish/Desktop/job_assignments/tekkare_assignment/tekkare_assignment/src/components/MedicineChart.tsx"],"sourcesContent":["// src/components/MedicineChart.tsx\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport KPIChart from './KPIChart';\nimport Card from './Card';\n\nconst MedicineChart: React.FC = () => {\n  const [medicines, setMedicines] = useState([]);\n  const [selectedMedication, setSelectedMedication] = useState(null);\n\n  useEffect(() => {\n    axios\n      .get('/path/to/data_exemple2.JSON')\n      .then(response => setMedicines(response.data.molecules))\n      .catch(error => console.error('Error fetching the medicine data:', error));\n  }, []);\n\n  const handleSelectMedication = (medication) => {\n    setSelectedMedication(medication);\n  };\n\n  return (\n    <Card title=\"Medication Price History\">\n      <div className=\"mb-6\">\n        <label htmlFor=\"medication-select\" className=\"block mb-2\">Select a medication:</label>\n        <select\n          id=\"medication-select\"\n          className=\"block w-full p-2 border rounded\"\n          onChange={e => {\n            const [moleculeName, medicationName] = e.target.value.split('|');\n            const selectedMolecule = medicines.find(molecule => molecule.name === moleculeName);\n            const selectedMedication = selectedMolecule?.medications.find(med => med.name === medicationName);\n            if (selectedMedication) handleSelectMedication(selectedMedication);\n          }}\n        >\n          <option value=\"\">-- Select a medication --</option>\n          {medicines.map(molecule => (\n            molecule.medications.map(medication => (\n              <option key={medication.name} value={`${molecule.name}|${medication.name}`}>\n                {molecule.name} - {medication.name} ({medication.dosage})\n              </option>\n            ))\n          ))}\n        </select>\n      </div>\n\n      {selectedMedication && (\n        <KPIChart\n          title={`${selectedMedication.name} Price History`}\n          data={selectedMedication.priceHistory.map(history => history.priceEUR)}\n          labels={selectedMedication.priceHistory.map(history => history.date)}\n        />\n      )}\n    </Card>\n  );\n};\n\nexport default MedicineChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}