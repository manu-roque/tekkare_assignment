{"ast":null,"code":"var _jsxFileName = \"/Users/jellyfish/Desktop/job_assignments/tekkare_assignment/tekkare_assignment/src/components/MedicineChart.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Card from './Card';\nimport KPIChart from './KPIChart';\nimport { useTranslation } from 'react-i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MedicineChart = () => {\n  _s();\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  const [medicines, setMedicines] = useState([]);\n  const [selectedMedication, setSelectedMedication] = useState(null);\n  useEffect(() => {\n    axios.get('/data_exemple2.JSON').then(response => {\n      setMedicines(response.data.molecules);\n    }).catch(error => {\n      console.error('Error fetching the medicine data:', error);\n    });\n  }, []);\n  const handleSelectMedication = medication => {\n    setSelectedMedication(medication);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    title: \"Medication Price History\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto p-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold mb-8 text-center\",\n        children: t(\"medications\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"medication-select\",\n          className: \"block mb-2\",\n          children: \"Select a medication:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"medication-select\",\n          className: \"block w-full p-2 border rounded\",\n          onChange: e => {\n            const [moleculeName, medicationName] = e.target.value.split('|');\n            const selectedMolecule = medicines.find(molecule => molecule.name === moleculeName);\n            const selectedMedication = selectedMolecule === null || selectedMolecule === void 0 ? void 0 : selectedMolecule.medications.find(med => med.name === medicationName);\n            if (selectedMedication) handleSelectMedication(selectedMedication);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- Select a medication --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this), medicines.map(molecule => molecule.medications.map(medication => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: `${molecule.name}|${medication.name}`,\n            children: [molecule.name, \" - \", medication.name, \" (\", medication.dosage, \")\"]\n          }, medication.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this)))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), selectedMedication && /*#__PURE__*/_jsxDEV(KPIChart, {\n        title: `${selectedMedication.name} Price History`,\n        data: selectedMedication.priceHistory.map(history => history.priceEUR),\n        labels: selectedMedication.priceHistory.map(history => history.date)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(MedicineChart, \"0OvUsJQbataWuj8GsE+09o7Lk5c=\", false, function () {\n  return [useTranslation];\n});\n_c = MedicineChart;\nexport default MedicineChart;\nvar _c;\n$RefreshReg$(_c, \"MedicineChart\");","map":{"version":3,"names":["React","useEffect","useState","axios","Card","KPIChart","useTranslation","jsxDEV","_jsxDEV","MedicineChart","_s","t","i18n","medicines","setMedicines","selectedMedication","setSelectedMedication","get","then","response","data","molecules","catch","error","console","handleSelectMedication","medication","title","children","className","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","e","moleculeName","medicationName","target","value","split","selectedMolecule","find","molecule","name","medications","med","map","dosage","priceHistory","history","priceEUR","labels","date","_c","$RefreshReg$"],"sources":["/Users/jellyfish/Desktop/job_assignments/tekkare_assignment/tekkare_assignment/src/components/MedicineChart.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Card from './Card';\nimport KPIChart from './KPIChart';\nimport { useTranslation } from 'react-i18next';\n\n\ninterface PriceHistory {\n  date: string;\n  priceEUR: number;\n  priceUSD: number;\n}\n\ninterface Medication {\n  name: string;\n  dosage: string;\n  priceHistory: PriceHistory[];\n}\n\ninterface Molecule {\n  name: string;\n  medications: Medication[];\n}\n\nconst MedicineChart: React.FC = () => {\n  const { t, i18n } = useTranslation();\n\n  const [medicines, setMedicines] = useState<Molecule[]>([]);\n  const [selectedMedication, setSelectedMedication] = useState<Medication | null>(null);\n\n  useEffect(() => {\n    axios\n      .get('/data_exemple2.JSON')\n      .then(response => {\n        setMedicines(response.data.molecules);\n      })\n      .catch(error => {\n        console.error('Error fetching the medicine data:', error);\n      });\n  }, []);\n\n  const handleSelectMedication = (medication: Medication) => {\n    setSelectedMedication(medication);\n  };\n\n  return (\n    <Card title=\"Medication Price History\">\n        <div className=\"container mx-auto p-8\">\n            <h1 className=\"text-3xl font-bold mb-8 text-center\">{t(\"medications\")}</h1>\n            \n            <div className=\"mb-6\">\n                <label htmlFor=\"medication-select\" className=\"block mb-2\">Select a medication:</label>\n                <select\n                    id=\"medication-select\"\n                    className=\"block w-full p-2 border rounded\"\n                    onChange={e => {\n                        const [moleculeName, medicationName] = e.target.value.split('|');\n                        const selectedMolecule = medicines.find(molecule => molecule.name === moleculeName);\n                        const selectedMedication = selectedMolecule?.medications.find(med => med.name === medicationName);\n                        if (selectedMedication) handleSelectMedication(selectedMedication);\n                    }}\n                >\n                <option value=\"\">-- Select a medication --</option>\n                {medicines.map(molecule => (\n                    molecule.medications.map(medication => (\n                    <option key={medication.name} value={`${molecule.name}|${medication.name}`}>\n                        {molecule.name} - {medication.name} ({medication.dosage})\n                    </option>\n                    ))\n                ))}\n                </select>\n            </div>\n\n            {selectedMedication && (\n                <KPIChart\n                    title={`${selectedMedication.name} Price History`}\n                    data={selectedMedication.priceHistory.map(history => history.priceEUR)}\n                    labels={selectedMedication.priceHistory.map(history => history.date)}\n                />\n            )}\n        </div>\n    </Card>\n  );\n};\n\nexport default MedicineChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}